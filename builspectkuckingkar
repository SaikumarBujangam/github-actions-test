bump_version()
{
  local scope=${1}
  local version_path=${2:?ERROR: Please provide a scope (major, minor, patch) and version file location}
  case $scope in
    major)
      SEM_VER_SCOPE=1
      ;;
    minor)
      SEM_VER_SCOPE=2
      ;;
    patch)
      SEM_VER_SCOPE=3
      ;;
    *)
      log_error "Please specify major, minor, patch" >&2
      return 1
      ;;
  esac

  touch ${version_path}/.version

  # First determine if there has ever been a version for this environment -- initial case
  unset current_branch_exists
  current_branch_exists=$(version ${version_path})
  if [ -z "$current_branch_exists" ]
  then
    echo "# Do not modify this file directly, unless you REALLY understand how it is used." >> ${version_path}/.version
    echo "# The patch version is updated automatically by the CI/CD pipeline" >> ${version_path}/.version
    echo "# Use bump_version for updating major and minor versions" >> ${version_path}/.version
    echo "version=1.0.0" >> ${version_path}/.version
    return 0
  fi

  readarray -t version_array < ${version_path}/.version
  rm -rf ${version_path}/.tmp_version
  touch ${version_path}/.tmp_version
  for version_item in "${version_array[@]}"
  do
    # Do a little error handling
    is_matched_comment_pattern=$([[ $version_item =~ ^# ]] && echo 0 || echo 1)
    if [ $is_matched_comment_pattern -eq 0 ]
    then
      echo $version_item >> ${version_path}/.tmp_version
      continue
    fi
    is_matched_pattern=$([[ $version_item =~ ^version=[0-9]*\.[0-9]*\.[0-9]* ]] && echo 0 || echo 1)
    if [ $is_matched_pattern -ne 0 ]
    then
      log_error "The semantic version in the file does not match the proper pattern" >&2
      return 1
    fi
    # do bump logic
    current_version=$(version ${version_path})
    current_scope_version=$(version ${version_path} | cut -d"." -f${SEM_VER_SCOPE})
    next_scope_version=$(expr $current_scope_version + 1)
    case $SEM_VER_SCOPE in
      1)
        sem_ver_major=$next_scope_version
        sem_ver_minor=0
        sem_ver_patch=0
        ;;
      2)
        sem_ver_major=$(echo $current_version | cut -d"." -f1)
        sem_ver_minor=$next_scope_version
        sem_ver_patch=0
        ;;
      3)
        sem_ver_major=$(echo $current_version | cut -d"." -f1)
        sem_ver_minor=$(echo $current_version | cut -d"." -f2)
        sem_ver_patch=$next_scope_version
        ;;
    esac
    echo "version=${sem_ver_major}.${sem_ver_minor}.${sem_ver_patch}" >> ${version_path}/.tmp_version
  done
  cp ${version_path}/.tmp_version ${version_path}/.version
  rm -rf ${version_path}/.tmp_version
}
export -f bump_version


 env:
    event_repo_name: AlightEngineering/adl-alightsec-adhoc
    cicd_version: d1.0.280
    event_repo_branch: master
    calling_repo_name: AlightEngineering/adl-awsdeploy-cicd
    dispatch_repo_name: adl-awsdeploy-cicd
Error: 2-08::11:53:52:UTC)] [ERROR] The semantic version in the file does not match the proper pattern
Error: Process completed with exit code 1.
