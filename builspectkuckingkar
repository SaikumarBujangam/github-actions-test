resource "aws_dynamodb_table" "table" {
  name           = var.table_name
  billing_mode   = "PAY_PER_REQUEST"
  hash_key       = var.hash_key

  attribute {
    name = var.hash_key
    type = "S"
  }

  dynamic "attribute" {
    for_each = var.range_key != null ? {var.range_key: "S"} : {}
    content {
      name = each.key
      type = each.value
    }
  }

  # Add attributes for GSI keys
  dynamic "attribute" {
    for_each = {for gsi in var.global_secondary_indexes : gsi.hash_key => "S"}
    content {
      name = each.key
      type = "S"
    }
  }

  dynamic "attribute" {
    for_each = {for gsi in var.global_secondary_indexes : gsi.range_key => "S" if gsi.range_key != null}
    content {
      name = each.key
      type = "S"
    }
  }

  # Dynamically create GSIs
  dynamic "global_secondary_index" {
    for_each = var.global_secondary_indexes
    content {
      name               = global_secondary_index.value.name
      hash_key           = global_secondary_index.value.hash_key
      projection_type    = global_secondary_index.value.projection_type

      # Conditionally add range_key
      range_key          = global_secondary_index.value.range_key != "" ? global_secondary_index.value.range_key : null

      # For INCLUDE projection type, specify non-key attributes
      dynamic "non_key_attributes" {
        for_each = global_secondary_index.value.projection_type == "INCLUDE" ? global_secondary_index.value.non_key_attributes : []
        content {
          non_key_attributes = non_key_attributes.value
        }
      }
    }
  }

  dynamic "ttl" {
    for_each = var.ttl_attribute_name != null ? [1] : []
    content {
      attribute_name  = var.ttl_attribute_name != null ? var.ttl_attribute_name : null
      enabled         = var.ttl_attribute_name != null ? true : null
    }
  }

  stream_enabled   = var.stream_enabled ? true : false
  stream_view_type = var.stream_enabled ? "NEW_AND_OLD_IMAGES" : null
  tags             = var.tags
}
