data "template_file" "build_spec_template" {
  count    = var.create_build_project ? 1 : 0
  template = file("${var.build_spec_file}")
  vars     = var.build_specific_variables
}

resource "aws_codebuild_project" "build" {
  count                  = var.create_build_project ? 1 : 0
  name                   = var.build_project_name
  description            = "${var.build_project_name} codebuild project"
  build_timeout          = "60"
  service_role           = var.codebuild_role_arn
  concurrent_build_limit = var.concurrent_build_limit

  dynamic "artifacts" {
    for_each = var.store_artifact == true ? [1] : []
    content {
      type                    = "S3"
      location                = var.artifact_bucket_name
      override_artifact_name  = true
      packaging               = "ZIP"
    }
  }

  dynamic "artifacts" {
    for_each = var.store_artifact == false ? [1] : []
    content {
      type                    = "NO_ARTIFACTS"
    }
  }

  environment {
    compute_type                = "BUILD_GENERAL1_SMALL"
    image                       = var.build_image
    type                        = "LINUX_CONTAINER"
    image_pull_credentials_type = "CODEBUILD"
    privileged_mode             = true
  }

  logs_config {
    cloudwatch_logs {
      group_name  = "${var.target_environment}-build-log-group"
      stream_name = "${var.build_project_name}-log-stream"
    }
  }

  source {
    type            = var.build_trigger
    location        = var.source_location
    buildspec       = data.template_file.build_spec_template[count.index].rendered
    git_clone_depth = 0
  }

  source_version = var.build_branch
  tags           = var.tags

}

output "codebuild_project_arn" {
  description = "Codebuild project ARN"
  value       = aws_codebuild_project.build[*].arn
}
