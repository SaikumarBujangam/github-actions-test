stages:
  - init
  - sonar-check

.get-aws-keys-base:
  image: registry.code.roche.com/navify/cicd/gitlab-ci-aws-role-assumer:1.3.2
  variables:
    IGNORE_SSL_WARNINGS: "1"
    OUTPUT_STYLE: dotenv
  script:
    - python /usr/src/app/assume_role.py $AWS_CICD_ROLE
  artifacts:
    reports:
      dotenv: ci-cd-aws.env
    public: false



get-aws-keys:
  extends: .get-aws-keys-base
  stage: init
  only:
    - merge_requests

sonar-check:
  image: maven:3.8.5-openjdk-17-slim
  stage: sonar-check
  tags: ["gen10"]
  variables:
    AWS_DEFAULT_REGION: eu-central-1
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - apt-get update
    - apt-get -y install awscli
    - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain dev --domain-owner 195227247767 --region eu-central-1 --query authorizationToken --output text`
    - mvn -s settings.xml clean verify --no-transfer-progress sonar:sonar -Pcoverage -U -e -Dsonar.projectName=starcap-login-services -Dsonar.projectKey=starcap-login-services -Dsonar.qualitygate.wait=true -Dsonar.host.url=https://sonarqube.roche.com -Dsonar.login=$SONAR_LOGIN
    
  only:
    - merge_requests
