# Creates DynamoDB Table
  resource "aws_dynamodb_table" "table" {
  name           = var.table_name
  billing_mode   = "PAY_PER_REQUEST"
  hash_key       = var.hash_key
  range_key      = var.range_key
 
  attribute {
    name = var.hash_key
    type = "S"
  }

  dynamic "attribute" {
    for_each = var.range_key != null ? [1] : []
    content {
      name = var.range_key != null ? var.range_key : null
      type = var.range_key != null ? "S" : null
    }
  }

  dynamic "global_secondary_index" {
    for_each = var.global_secondary_indexes != null ? toset(keys(var.global_secondary_indexes)) : []
    content {
      name                      = global_secondary_index.value.key
      hash_key                  = var.global_secondary_indexes[global_secondary_index.key].hash_key
      projection_type           = var.global_secondary_indexes[global_secondary_index.key].projection_type
      range_key                 = var.global_secondary_indexes[global_secondary_index.key].range_key
    }
  }

  dynamic "ttl" {
    for_each = var.ttl_attribute_name != null ? [1] : []
    content {
      attribute_name  = var.ttl_attribute_name != null ? var.ttl_attribute_name : null
      enabled         = var.ttl_attribute_name != null ? true : null
    }
  }
  stream_enabled   = var.stream_enabled ? true : false 
  stream_view_type = var.stream_enabled ? "NEW_AND_OLD_IMAGES" : null 
  tags             = var.tags
  }


variable "table_name" {
  description = "Name of the dynamodb table"
  type        = string
}

variable "hash_key" {
  description = "Hash key of the dynamodb table"
  type        = string
}

variable "range_key" {
  description = "Range key of the dynamodb table"
  type        = string
  default     = null
}

variable "ttl_attribute_name" {
  description = "Name of the attribute to set the TTL"
  type        = string
  default     = null
}

variable "tags" {
  type        = map
  default     = {}
}

variable "stream_enabled" {
  description = "Enable or disable dynamodb stream"
  type      = bool
}

variable "global_secondary_indexes" {
  description = "List of Global Secondary Indexes"
  type        = map(object({
    hash_key  = string
    projection_type = string
    range_key = string
  }))
}




variable "tags" {
  type    = map
  default = {}
}

variable "default_table_attributes" {
  default = {
    range_key                = null,
    ttl_attribute_name       = null,
    stream_enabled           = false,
    global_secondary_indexes = []
  }
}
