def _contains_destructive_operations(self, sql_statement):
    destructive_keywords = ['drop', 'delete']
    normalized_sql = sql_statement.lower()
    contains_destructive_ops = False  # Initialize with False

    for keyword in destructive_keywords:
        if keyword in normalized_sql:
            contains_destructive_ops = True
            if not self._allow_destructive_operations:  # Add this condition
                self.logger.info("Potentially destructive keyword '{}' found in SQL Statement: {}".format(keyword, sql_statement))
                self.logger.info("Normalized SQL Statement: {}".format(normalized_sql))
            break

    if contains_destructive_ops and self._allow_destructive_operations:
        self.logger.info("Potentially destructive keyword '{}' found in SQL Statement: {}".format(keyword, sql_statement))
        self.logger.info("Normalized SQL Statement: {}".format(normalized_sql))

    return contains_destructive_ops
