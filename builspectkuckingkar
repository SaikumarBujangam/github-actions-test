locals {
  name            = "${var.org_key}-discourse-cluster"
  cluster_version = "1.28"
  account_id      = data.aws_caller_identity.current.account_id
  azs             = var.azs

}

################################################################################
# EKS Module
################################################################################

module "eks" {
  source = "terraform-aws-modules/eks/aws"
  version = "19.21.0"

  cluster_name                   = local.name
  cluster_version                = local.cluster_version
  cluster_endpoint_public_access = true

  cluster_addons = {
    kube-proxy = {}
    vpc-cni    = {}
    coredns = {
      configuration_values = jsonencode({
        computeType = "Fargate"
      })
    }
  }

  vpc_id                   = data.aws_vpc.domain_vpc.id
  subnet_ids               = data.aws_subnets.domain_subnets.ids

  # Fargate profiles use the cluster primary security group so these are not utilized
  create_cluster_security_group = false
  create_node_security_group    = false

  manage_aws_auth_configmap = true
  # Role arn values needs to change as variables
  aws_auth_roles = [
    {
      rolearn  = "arn:aws:iam::${local.account_id}:role/StarCapEngineering"
      username = "StarCapEngineering"
      groups = ["system:masters"]
    },
    {
      rolearn  = "arn:aws:iam::${local.account_id}:role/StarCapDevOps"
      username = "StarCapDevOps"
      groups = ["system:masters"]
    }
  ]
  
  fargate_profile_defaults = {
    iam_role_additional_policies = {
      additional = aws_iam_policy.additional.arn
    }
  }

  fargate_profiles = merge(
    {
      discource-fp = {
        name = "discource-fp"
        selectors = [
          {
            namespace = "default"
          },
          {
            namespace = "kube-system"
          }
        ]
        subnet_ids = data.aws_subnets.domain_subnets.ids
      }
    }
  )

}

################################################################################
# Supporting Resources
################################################################################

resource "aws_iam_policy" "additional" {
  name = "${local.name}-additional"

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = [
          "ec2:Describe*",
        ]
        Effect   = "Allow"
        Resource = "*"
      },
      {
        "Effect": "Allow",
        "Action": [
          "logs:CreateLogStream",
          "logs:CreateLogGroup",
          "logs:DescribeLogStreams",
          "logs:PutLogEvents"
        ],
        "Resource": "*"
      },
    ]
  })
}

module "eks_load_balancer_controller" {
  source = "../../terraform-modules/eks-load-balancer-controller"

  enabled = true
  region  = var.region
  vpc_id = data.aws_vpc.domain_vpc.id

  cluster_identity_oidc_issuer     = module.eks.cluster_oidc_issuer_url
  cluster_identity_oidc_issuer_arn = module.eks.oidc_provider_arn
  cluster_name                     = module.eks.cluster_name

  depends_on = [module.eks.fargate_profiles]
}
