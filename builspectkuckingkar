This new workflow, named "ADL CICD Deploy," is designed to automate the deployment process of artifacts (such as code, configurations, etc.) to various environments based on inputs provided. Here's an explanation of how it works:

Workflow Trigger:

This workflow is triggered by a workflow_call event, which allows external systems or workflows to trigger this workflow and provide inputs.
Inputs:

The workflow expects several inputs, which are provided when triggering the workflow. These inputs include:
event_repo_name: The name of the repository containing the artifacts to be deployed.
event_repo_branch: The branch of the repository to be deployed.
deploy_env: The deployment environment (e.g., dev, qa, prod).
feature_branch_name: (Optional) The name of the feature branch to be deployed.
calling_repo_name: (Optional) The full reference of the CICD repository triggering the workflow.
dispatch_repo_name: (Optional) The name of the CICD repository.
Jobs:

The workflow contains a single job named adl-cicd-deploy.
This job orchestrates the deployment process based on the provided inputs.
Steps:

Log Environment Variables: Logs the provided inputs for visibility.
Get Repositories: Clones the repositories specified in the inputs (calling repository and repository to be deployed) based on the provided branch.
Increment Calling Repo Version: Increments the version of the repository being deployed under certain conditions (e.g., production environment and master branch).
ADL Set Environment Credentials: Sets environment credentials based on the deployment environment.
Configure AWS Credentials: Configures AWS credentials for the deployment.
Install Dependencies: Installs dependencies required for the deployment.
Run CICD Pipeline: Executes the CICD pipeline for deployment, passing relevant environment and repository information.
Environment Variables:

Environment variables such as repository names, branches, deployment environment, etc., are set and used throughout the workflow to streamline the deployment process.
AWS Configuration:

AWS credentials are configured using GitHub secrets to enable deployment tasks that interact with AWS services.
Overall, this workflow provides a structured and automated approach to deploying artifacts to different environments, allowing for flexibility and customization based on provided inputs. It streamlines the deployment process, reduces manual intervention, and ensures consistency across deployments.
