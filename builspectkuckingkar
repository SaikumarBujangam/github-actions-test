I need to add one more team and change the code as per that. I need to add bypass branch protection permission settings and add admin team

# Comments
# All 3 of these secrets are needed
# GH_TOKEN: ${{ secrets.GH_CLONE_REPO }}
# github_user: ${{ secrets.GH_USER_NAME }}
# github_token: ${{ secrets.GH_CLONE_REPO }}
name: ADL Create New Repository From Template
on:
  workflow_dispatch:
    inputs:
      repo-division-name:
        description: 'Repo Division Area:'
        required: true
        type: string
        default: 'adl'
      repo-group-name:
        description: 'Data Product for this repo'
        required: true
        type: string
        default: 'no-group-provided'
      repo-subject-area:
        description: 'Repo Subject Area:'
        required: true
        type: string
        default: ''
      repo-template-name:
        description: 'Based on template:'
        required: true
        type: string
        default: 'adl-dataproduct-template'
      org-name:
        description: 'Organization to use for repo creation'
        required: true
        type: string
        default: 'AlightEngineering'
      admin-team-name:
        description: 'Admin team for repo'
        required: true
        type: string
        default: 'adl-core-admins'
      repo-dataproductowner-approvers-team:
        description: 'Data Product Owner Approvers Team for release/prod'
        required: true
        type: string
        default: 'adl-<dataproductname>-dataproductowners-approvers'

jobs:
  adl-create-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Issue GH Create Repo Call
        env:
          GH_TOKEN: ${{ secrets.GH_CLONE_REPO }}
        run: |
          if [[ ${{ inputs.repo-group-name }} = "no-group-provided" ]]
          then
            echo "Please specify group"
            exit 1
          fi
          if [[ ${{ inputs.repo-dataproductowner-approvers-team }} = "adl-<dataproductname>-dataproductowners-approvers" ]]
          then
            echo "Please provide a dataproduct owner approvers team"
            exit 1
          fi
          echo ${{ inputs.repo-division-name }}
          echo ${{ inputs.repo-group-name }}
          echo ${{ inputs.repo-subject-area }}
          echo ${{ inputs.repo-dataproductowner-approvers-team }}
          gh repo create ${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} --internal --template ${{ inputs.org-name }}/${{ inputs.repo-template-name }}
      - name: Sleep After Create Repository
        run: |
          echo "Sleeping for 120 seconds..."
          sleep 120
          echo "Waking up..."
      - name: Add Secrets to the Client Repository
        env:
          GH_TOKEN:
            ${{ secrets.GH_CLONE_REPO }}
          SHARED_REPO_PAT:
            ${{ secrets.REPO_PAT }}
          GH_USER_NAME:
            ${{ secrets.GH_USER_NAME }}
          ADL_DEV_ACCESS_KEY:
            ${{ secrets.ADL_DEV_ACCESS_KEY }}
          ADL_DEV_SECRET_KEY:
            ${{ secrets.ADL_DEV_SECRET_KEY }}
          ADL_QA_ACCESS_KEY:
            ${{ secrets.ADL_QA_ACCESS_KEY }}
          ADL_QA_SECRET_KEY:
            ${{ secrets.ADL_QA_SECRET_KEY }}
          ADL_QC_ACCESS_KEY:
            ${{ secrets.ADL_QC_ACCESS_KEY }}
          ADL_QC_SECRET_KEY:
            ${{ secrets.ADL_QC_SECRET_KEY }}
          ADL_PROD_ACCESS_KEY:
            ${{ secrets.ADL_PROD_ACCESS_KEY }}
          ADL_PROD_SECRET_KEY:
            ${{ secrets.ADL_PROD_SECRET_KEY }}
        run: |
          gh secret set REPO_PAT --repo ${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} --body "${SHARED_REPO_PAT}"
          gh secret set GH_USER_NAME --repo ${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} --body "${GH_USER_NAME}"
          gh secret set GH_CLONE_REPO --repo ${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} --body "${GH_TOKEN}"
          gh secret set ADL_DEV_ACCESS_KEY --repo ${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} --body "${ADL_DEV_ACCESS_KEY}"
          gh secret set ADL_DEV_SECRET_KEY --repo ${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} --body "${ADL_DEV_SECRET_KEY}"
          gh secret set ADL_QA_ACCESS_KEY --repo ${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} --body "${ADL_QA_ACCESS_KEY}"
          gh secret set ADL_QA_SECRET_KEY --repo ${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} --body "${ADL_QA_SECRET_KEY}"
          gh secret set ADL_QC_ACCESS_KEY --repo ${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} --body "${ADL_QC_ACCESS_KEY}"
          gh secret set ADL_QC_SECRET_KEY --repo ${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} --body "${ADL_QC_SECRET_KEY}"
          gh secret set ADL_PROD_ACCESS_KEY --repo ${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} --body "${ADL_PROD_ACCESS_KEY}"
          gh secret set ADL_PROD_SECRET_KEY --repo ${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} --body "${ADL_PROD_SECRET_KEY}"
      - name: Add Group Designation File
        run: |
          group_file_content=$(echo ${{ inputs.repo-group-name }} |base64)
          data="{\"message\":\"Adds group file\",\"committer\":{\"name\":\"Dushyant Remivasan\",\"email\":\"dushyant.remivasan@alight.com\"},\"content\": \"$(echo ${group_file_content})\"}"
          echo $data > curl_data.json
          curl -X PUT -H "Authorization: Bearer ${{ secrets.GH_CLONE_REPO }}" -H "Accept: application/vnd.github.everest-preview+json" https://api.github.com/repos/${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }}/contents/.group -d @curl_data.json
          rm curl_data.json
      - name: Patch Delete Branch On Merge
        env:
          GH_TOKEN: ${{ secrets.GH_CLONE_REPO }}
        run: |
          gh api --method PATCH -H "Accept: application/vnd.github+json" /repos/${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} -F delete_branch_on_merge=true
      - name: Add Admin Team To Repo
        env:
          GH_TOKEN: ${{ secrets.GH_CLONE_REPO }}
        run: |
          gh api --method PUT -H "Accept: application/vnd.github+json" /orgs/${{ inputs.org-name }}/teams/${{ inputs.admin-team-name }}/repos/${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} -f permission='admin'
      - name: Add Dataproduct Owner Approvers Team To Repo
        env:
          GH_TOKEN: ${{ secrets.GH_CLONE_REPO }}
        run: |
          gh api --method PUT -H "Accept: application/vnd.github+json" /orgs/${{ inputs.org-name }}/teams/${{ inputs.repo-dataproductowner-approvers-team }}/repos/${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }} -f permission='push'
      - name: Add Code Owners To Master 
        env:
          github_user: ${{ secrets.GH_USER_NAME }}
          GH_TOKEN: ${{ secrets.GH_CLONE_REPO }}
        run: |
          git clone -b master --single-branch https://${github_user}:${GH_TOKEN}@github.com/AlightEngineering/adl-awsdeploy-cicd.git
          repo_base=$(pwd)/adl-awsdeploy-cicd
          export PYTHONPATH=${repo_base}/src
          pip install -r ${repo_base}/requirements.txt
          ls -l ${repo_base}/.github/data/CODEOWNERS.template
          python ${repo_base}/src/alight/foundation/app/generatetemplate.py --base-arg-parser-config-file-location ${repo_base}/config --base-arg-parser-config-file-name generate-template-build-args.json --template-root-location ${repo_base}/.github/data --template-file-name CODEOWNERS.template --generated-script-file-location ${repo_base} --generated-script-file-name CODEOWNERS_MASTER \
          --cicdvar "CODE_OWNER_TEAM_NAME=${{ inputs.repo-dataproductowner-approvers-team }}" \
          --cicdvar "ADMIN_TEAM_NAME=${{ inputs.admin-team-name }}"       
          
          sleep 5
          export last_sha=$(gh api --method GET -H "Accept: application/vnd.github+json" /repos/${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }}/contents/CODEOWNERS -f ref="master" | jq | grep sha | cut -f2 -d":" | tr ',' ' ' | tr -d '"')
          
          sleep 5
          code_owners_content=$(cat ${repo_base}/CODEOWNERS_MASTER |base64 -w 0)
          code_owners_data="{\"message\":\"Updates CODEOWNERS file on master branch\",\"committer\":{\"name\":\"Dushyant Remivasan\",\"email\":\"dushyant.remivasan@alight.com\"},\"content\": \"$(echo ${code_owners_content})\",\"branch\": \"master\",\"sha\": \"$(echo ${last_sha})\"}"
          echo $code_owners_data > code_owners_data.json

          sleep 5
          curl -X PUT \
          -H "Authorization: Bearer ${{ secrets.GH_CLONE_REPO }}" -H "Accept: application/vnd.github+json" \
          https://api.github.com/repos/${{ inputs.org-name }}/${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }}/contents/CODEOWNERS \
          -d @code_owners_data.json   

  update-master-branch-permissions:
    name: Update Branch Protection For master Branch
    uses:
      AlightEngineering/adl-awsdeploy-cicd/.github/workflows/branch-permissions.yml@master
    with:
      repo-name: ${{ inputs.repo-division-name }}-${{ inputs.repo-group-name }}-${{ inputs.repo-subject-area }}
      repo-template-name: ${{ inputs.repo-template-name }}
      org-name: ${{ inputs.org-name }}
      branch-name: "master"
      branch-permissions-base-name: master-branch-permissions
      branch-permissions-approver-team: ${{ inputs.repo-dataproductowner-approvers-team }}
      branch-permissions-bypass-team: ${{ inputs.admin-team-name }}
    secrets:
      branch-user: ${{ secrets.GH_USER_NAME }}
      branch-secret: ${{ secrets.GH_CLONE_REPO }}
    needs:
      adl-create-repo

the reused workflow branch-permissions.yml is below

name: ADL Set Branch Permissions
on:
  workflow_call:
   inputs:
     repo-name:
       description: 'New Repo Name:'
       required: true
       type: string
       default: ''
     repo-template-name:
       description: 'Based on template:'
       required: true
       type: string
       default: 'cdl-dataproduct-template'
     org-name:
       description: 'Organization to use for repo creation'
       required: true
       type: string
       default: 'AlightEngineering'
     branch-name:
       description: 'Branch name to apply permissions'
       required: true
       type: string
       default: 'master'
     branch-permissions-base-name:
       description: 'Base name for template file and JSON output file, that contains the permissions'
       required: true
       type: string
       default: ''
     branch-permissions-bypass-team:
       description: 'Template file that contains the permissions'
       required: true
       type: string
       default: 'adl-core-admins'
     branch-permissions-approver-team:
       description: 'Template file that contains the permissions'
       required: true
       type: string
       default: ''
   secrets:
    branch-user:
      required: true
    branch-secret:
      required: true

jobs:
  add_branch_permission:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@master
    - name: Add Branch Permission
      env:
        GH_USER: ${{ secrets.branch-user }}
        GH_PASSWORD: ${{ secrets.branch-secret }}
      run: |
        export PYTHONPATH=$(pwd)/src
        pip install -r $(pwd)/requirements.txt
        base_permissions_file=${{ inputs.branch-permissions-base-name }}
        inputted_approver_team=${{ inputs.branch-permissions-approver-team }}
        bypass_team_name=${{ inputs.branch-permissions-bypass-team }}
        echo $(pwd)/.github/data
        echo ${base_permissions_file}
        ls -l $(pwd)/.github/data/${base_permissions_file}.template
        python $(pwd)/src/alight/foundation/app/generatetemplate.py --base-arg-parser-config-file-location $(pwd)/config --base-arg-parser-config-file-name generate-template-build-args.json --template-root-location $(pwd)/.github/data --template-file-name ${base_permissions_file}.template --generated-script-file-location $(pwd)/.github/data --generated-script-file-name ${base_permissions_file}.json --cicdvar "repo_approver_team=${inputted_approver_team}" --cicdvar "bypass_team_name=${bypass_team_name}"
        permissions_file=$(pwd)/.github/data/inputs.branch-permissions-base-name.json        
        permissions_file=$(pwd)/.github/data/${{ inputs.branch-permissions-base-name }}.json
        curl -X PUT \
          -H "Accept: application/vnd.github+json" \
          https://${GH_USER}:${GH_PASSWORD}@api.github.com/repos/${{ inputs.org-name }}/${{ inputs.repo-name }}/branches/${{ inputs.branch-name }}/protection \
          -d @$permissions_file
    - name: Sleep After Branch Creation
      run:
        echo "Sleeping for 5 seconds"
        sleep 5
        echo "Waking up"

the master-branch-permissions.template is below

{
  "required_status_checks": {
    "strict":true, 
    "contexts" : []
  }, 
  "enforce_admins":true,
  "required_pull_request_reviews": {
    "dismiss_stale_reviews":true,
    "require_code_owner_reviews":true,
    "required_approving_review_count":1,
    "bypass_pull_request_allowances": {
      "users": [],
      "teams": [ "{{bypass_team_name}}" ]
    }
  },
  "restrictions": null,
  "required_linear_history":false,
  "allow_force_pushes":false,
  "allow_deletions":false,
  "block_creations":true,
  "required_conversation_resolution":false
}
