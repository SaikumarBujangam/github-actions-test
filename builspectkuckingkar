locals { 
  tables = [
      {
          name      = "Organisation",
          hash_key  = "org_key"
          
      },
      {
          name      = "PlatformConfig",
          hash_key  = "item_name"
          range_key = "item_type",
          
      },
      {
          name      = "Project",
          hash_key  = "project_key"
          range_key = "org_key",
          
      },
      {
          name      = "User",
          hash_key  = "id"
          range_key = null,
          
      },
      {
          name      = "UserRoleDetails",
          hash_key  = "user_id"
          range_key = "role_hashkey",
          
      },
      {
          name      = "UserTrainingDetails",
          hash_key  = "id"
          
          
      },
      {
          name      = "DataIngress",
          hash_key  = "project_key"
          range_key = "composed_key",
          stream_enabled = true
          stream_view_type = true
          
          
      },
      {
          name                  = "UserLoginDetails",
          hash_key              = "user_email"
          ttl_attribute_name    = "expiry_time"
      },
      {
          name      = "ProjectInfraDetails",
          hash_key  = "project_key"
          range_key = "resource_key",
          
      },
      {
          name      = "RoleDetails",
          hash_key  = "role_id"
          
      }
  ]
}

# Creation of platform dynamodb tables
module "platform_dynamodb_table" {
  source      = "../aws-common/dynamodb"

  for_each              = { for table in local.tables : table.name => merge(var.default_table_attributes, table)  }
  table_name            = each.key
  hash_key              = each.value.hash_key
  range_key             = each.value.range_key
  ttl_attribute_name    = each.value.ttl_attribute_name
  stream_enabled        = each.value.stream_enabled
  stream_view_type      = each.value.stream_view_type
}


# Creates DynamoDB Table
  resource "aws_dynamodb_table" "table" {
  name           = var.table_name
  billing_mode   = "PAY_PER_REQUEST"
  hash_key       = var.hash_key
  range_key      = var.range_key
 
  attribute {
    name = var.hash_key
    type = "S"
  }

  dynamic "attribute" {
    for_each = var.range_key != null ? [1] : []
    content {
      name = var.range_key != null ? var.range_key : null
      type = var.range_key != null ? "S" : null
    }
  }

  dynamic "ttl" {
    for_each = var.ttl_attribute_name != null ? [1] : []
    content {
      attribute_name  = var.ttl_attribute_name != null ? var.ttl_attribute_name : null
      enabled         = var.ttl_attribute_name != null ? true : null
    }
  }
  stream_enabled   = var.stream_enabled ? true : false 
  stream_view_type = var.stream_view_type ? "NEW_AND_OLD_IMAGES" : null 
  tags             = var.tags
  }


time=2023-09-21T16:54:32+05:30 level=info msg=╷
│ Error: Unsupported attribute
│
│   on outputs.tf line 2, in output "data_ingress_table_arn":
│    2:     value = module.platform_dynamodb_table["DataIngress"].table_arn
│     ├────────────────
│     │ module.platform_dynamodb_table["DataIngress"] is a object, known only after apply
│
│ This object does not have an attribute named "table_arn".
