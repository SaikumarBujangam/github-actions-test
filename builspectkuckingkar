data "template_file" "build_spec_template" {
  count    = var.create_build_project ? 1 : 0
  template = file("${var.build_spec_file}")
  vars     = var.build_specific_variables
}

resource "aws_codebuild_project" "build" {
  count                  = var.create_build_project ? 1 : 0
  name                   = "${var.org_key}-${var.project_key}-docker-build"
  description            = "${var.org_key}-${var.project_key} codebuild project"
  build_timeout          = "120"
  service_role           = aws_iam_role.codebuild_role[0].arn

  environment {
    compute_type                = "BUILD_GENERAL1_SMALL"
    image                       = "aws/codebuild/amazonlinux2-x86_64-standard:4.0"
    type                        = "LINUX_CONTAINER"
    image_pull_credentials_type = "CODEBUILD"
    privileged_mode             = true
  }

  logs_config {
    cloudwatch_logs {
      group_name  = "${var.org_key}-${var.project_key}-build-log-group"
      stream_name = "${var.project_key}-log"
    }
  }

  source {
    type            = "CODECOMMIT"
    location        = module.project_codecommit[0].codecommit_repo_clone_url_http
    buildspec       = file("${path.module}/build_spec/docker_build.yml"){

    }
    git_clone_depth = 0

    build_specific_variables = {
    "ecr_repository_url"       = module.project_ecr[0].ecr_repo_url
    
  }


  }

  source_version = var.build_branch
  tags = merge(
    {
      "organization" = "${var.org_key}"
    }, 
    {
      "platform" = "${var.org_key}"
    }, 
    {
       "project_key" = "${var.project_key}"
    },
  )

}
