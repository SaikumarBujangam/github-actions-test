import unittest

class TestPostgresDataAPI(unittest.TestCase):
    def setUp(self):
        self.data_api = PostgresDataAPI(db_name="your_db_name", db_user_name="your_user", db_host="your_host", db_password="your_password")

    def tearDown(self):
        self.data_api.close_connection()

    def test_create_table(self):
        sql_statement = "CREATE TABLE test_cicd.sample_table (id SERIAL PRIMARY KEY, name VARCHAR);"
        query_id, status = self.data_api.execute_sql(sql_statement)
        self.assertEqual(status, "FINISHED")

    def test_select_from_table(self):
        self.test_create_table()  # Ensure there's a table to select from

        sql_statement = "SELECT * FROM test_cicd.sample_table;"
        query_id, status = self.data_api.execute_sql(sql_statement)
        self.assertEqual(status, "FINISHED")

    def test_table_not_created(self):
        sql_statement = "SELECT * FROM test_cicd.non_existent_table;"
        query_id, status = self.data_api.execute_sql(sql_statement)
        self.assertEqual(status, "FAILED")

if __name__ == '__main__':
    unittest.main()
