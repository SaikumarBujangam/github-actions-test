stages:
  - setup
  - testing
  - sonar-analysis

setup:
  image: node:14
  stage: setup
  tags: ["gen10"]
  script:
    - npm config set registry https://navify.jfrog.io/artifactory/api/npm/navify-npm/
    - echo "registry=https://navify.jfrog.io/artifactory/api/npm/navify-npm/" > ~/.npmrc
    - echo "always-auth=true" >> ~/.npmrc
    - echo "email=ravi.govindasami@contractors.roche.com" >> ~/.npmrc
    - echo "//navify.jfrog.io/artifactory/api/npm/navify-npm/:username=ravi.govindasami" >> ~/.npmrc
    - cat ~/.npmrc
    - apt-get update -y && apt-get install -y unzip wget
    - npm install -y --save --legacy-peer-deps
    - npm install -g @angular/cli@14.0.0
    - npm install -g sonarqube-scanner
    - npm run ng -v
    - npm i emoji-regex@8.0.0
    - npm i -D puppeteer karma-chrome-launcher
    - npm i --save-dev karma-junit-reporter
    - wget -N https://chromedriver.storage.googleapis.com/101.0.4951.15/chromedriver_linux64.zip
    - unzip chromedriver_linux64.zip
    - chmod +x chromedriver
    - cp chromedriver /usr/local/bin
    - npm update --save
    - sonar-scanner -v

testing:
  image: node:14
  stage: testing
  tags: ["gen10"]
  script:
    - ng test --watch=false --code-coverage

sonar-analysis:
  image: node:14
  stage: analysis-build
  tags: ["gen10"]
  script:
    - sonar-scanner -Dsonar.projectKey=starcap-webapp-v2 -Dsonar.projectName=starcap-webapp-v2 -Dsonar.branch.name=develop -Dsonar.projectBaseDir=. -Dsonar.sources=$PWD/src -Dsonar.javascript.lcov.reportPaths=$PWD/coverage/lcov.info -Dsonar.tests=$PWD/src -Dsonar.test.inclusions=$PWD/src/**/*.spec.ts -Dsonar.typescript.jstestdriver.coveragefile=$PWD/coverage/lcov.info -Dsonar.qualitygate.wait=true -Dsonar.host.url=https://sonarqube.roche.com

only:
  refs:
    - merge_requests
  variables:
    - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
