##########################
# creating Lambda Function
###########################


resource "aws_lambda_function" "lambda_dynamodb_stream" {
  function_name = var.lambda_function_name
  description   = "Dynamodb stream"
  memory_size   = "512"
  timeout       = "300"
  ephemeral_storage {
    size = "2048"
  }
  role         = aws_iam_role.lambda_role.arn
  runtime      = Python3.9 
  
  s3_bucket         = aws_s3_bucket.bucket.name
  s3_key            = lambda/lambda_function.zip
    
}
#######################################
# Common module for creating s3 bucket
#######################################

resource "aws_s3_bucket" "bucket" {
  bucket = dynamodb_stream
}

resource "aws_s3_bucket_public_access_block" "bucket" {
  bucket = aws_s3_bucket.bucket.id

  block_public_acls       = true
  block_public_policy     = true
  restrict_public_buckets = true
  ignore_public_acls      = true
}

resource "aws_s3_bucket_server_side_encryption_configuration" "bucket" {
  bucket = aws_s3_bucket.bucket.id

  rule {
    apply_server_side_encryption_by_default {
      sse_algorithm     = "AES256"
    }
  }
}

resource "aws_s3_bucket_versioning" "bucket" {
  bucket = aws_s3_bucket.bucket.id
  
  versioning_configuration {
    status = "Enabled"
  }
}

resource "aws_s3_bucket_ownership_controls" "bucket" {
  count = var.bucket_ownership ? 1 : 0
  bucket = aws_s3_bucket.bucket.id

  rule {
    object_ownership = "BucketOwnerPreferred"
  }
}

####################################################
# Adding bucket policy to Authorizing HTTP requests
####################################################

resource "aws_s3_bucket_policy" "policy" {
  bucket = aws_s3_bucket.bucket.id
  
  policy = jsonencode({
    Version = "2012-10-17"
    Id      = "compliantpolicy"
    Statement = [
      {
        Sid       = "HTTPSOnly"
        Effect    = "Deny"
        Principal = "*"
        Action    = "s3:*"
        Resource = [
          aws_s3_bucket.bucket.arn,
          "${aws_s3_bucket.bucket.arn}/*",
        ]
        Condition = {
          Bool = {
            "aws:SecureTransport" = "false"
          }
        }
      },
    ]
  })
}
prefix=[C:\Users\umababy.kannan\OneDrive - HCL Technologies Ltd\Documents\Star CAP\clone\platform-infra\platform-infra\live\dev\eu-central-1\platform-backend]
time=2023-09-20T12:21:14+05:30 level=info msg=╷
│ Error: Invalid reference
│
│   on s3.tf line 6, in resource "aws_s3_bucket" "bucket":
│    6:   bucket = dynamodb_stream
│
│ A reference to a resource type must be followed by at least one attribute
│ access, specifying the resource name.


