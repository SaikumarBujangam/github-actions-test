resource "helm_release" "my-discourse-0" {
  depends_on = [
    #aws_acm_certificate.certificate,
    module.eks,
    aws_secretsmanager_secret_version.discourse,
    module.eks_load_balancer_controller,
    kubernetes_persistent_volume_claim_v1.discourse-persistent-volume-claim,
    kubernetes_persistent_volume_claim_v1.postgres-persistent-volume-claim,
    kubernetes_persistent_volume_claim_v1.redis-persistent-volume-claim
  ]
  name = lower("${var.org_key}-my-discourse")
  chart = "discourse"
  repository  = "https://charts.bitnami.com/bitnami"
  wait_for_jobs = true
  values = [
    templatefile("${path.module}/templates/discourse.yaml",
      {
        # auth
        admin_email       = jsondecode(aws_secretsmanager_secret_version.discourse.secret_string)["admin_email"]
        admin_user        = jsondecode(aws_secretsmanager_secret_version.discourse.secret_string)["admin_user"]
        admin_password    = jsondecode(aws_secretsmanager_secret_version.discourse.secret_string)["admin_password"]
        # hosting
        host              = lower("discourse.${var.org_key}.${data.aws_route53_zone.hosted_zone.name}")
        subnet_id_1       = data.aws_subnets.public_subnets.ids[0]
        subnet_id_2       = data.aws_subnets.public_subnets.ids[1]
        org_key           = var.org_key
        ssl_policy        = "ELBSecurityPolicy-TLS13-1-2-2021-06"
        smtp_user_name    = jsondecode(aws_secretsmanager_secret_version.discourse.secret_string)["smtp_user_name"]
        smtp_user_password= jsondecode(aws_secretsmanager_secret_version.discourse.secret_string)["smtp_user_password"]
        database          = jsondecode(aws_secretsmanager_secret_version.discourse.secret_string)["dbname"]
        db_username       = jsondecode(aws_secretsmanager_secret_version.discourse.secret_string)["db_user"]
        db_password       = jsondecode(aws_secretsmanager_secret_version.discourse.secret_string)["db_password"]
        postgresPassword  = jsondecode(aws_secretsmanager_secret_version.discourse.secret_string)["postgresPassword"]
        # Discourse Environment Variable
        skip_install = var.skip_install
        certificate_arn = data.aws_acm_certificate.eks.arn
      })
  ]
}
