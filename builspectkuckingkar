#######################
# IAM Role - For Lambda
#######################

resource "aws_iam_role" "sagemaker_role" {
  name               = "${var.platform}-${var.jupyter_notebook_name}-role"
  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": "sagemaker.amazonaws.com"
      },
      "Effect": "Allow"
    }
  ]
}
EOF
}

#######################
# IAM Policy: jupyter
#########################

resource "aws_iam_role_policy" "dynamo_db_stream_policy" {
  name   = "${var.platform}-${var.jupyter_notebook_name}-policy"
  role   = aws_iam_role.sagemaker_role.name
  policy = templatefile("${path.module}/templates/policy_proj_jupyter.tpl", {
      region = var.region ,
      projectid = var.project_uid,
      username = var.project_userid
      })
}

#####################################
# Project On Demand JUPYTER Instance
#####################################

resource "aws_sagemaker_notebook_instance" "starcap_jupyter" {
  
  name                  = var.jupyter_notebook_name
  instance_type         = var.jupyter_instance_type
  role_arn              = aws_iam_role.sagemaker_role.arn
  subnet_id             = var.subnet_ids[0]
  security_groups       = [data.aws_security_group.ondemand_sg.id]
  lifecycle_config_name = aws_sagemaker_notebook_instance_lifecycle_configuration.jupyter_lc.id
  root_access           = "Disabled"
  tags                  = local.tags
  # Production Bug for Jupyter not spinning starts
  platform_identifier = var.platform_identifier
  # Production Bug for Jupyter not spinning ends
  depends_on = [
    aws_sagemaker_notebook_instance_lifecycle_configuration.jupyter_lc
  ]
}

resource "aws_sagemaker_notebook_instance_lifecycle_configuration" "jupyter_lc" {
  name  = "${var.platform}-${var.jupyter_notebook_name}-policy"
  
  on_start = base64encode(templatefile("${path.module}/templates/on_start_mount.tpl", {
        proj_raw_fsx_mount      = var.raw_fsx_mount,
        proj_raw_fsx_dns        = var.raw_fsx_dns,
        proj_scratch_fsx_dns    = var.scratch_fsx_dns,
        proj_scratch_fsx_mount  = var.scratch_fsx_mount
      }))
}
