def execute_sql(self, sql_statement):
    try:
        if not self._cursor or self._cursor.closed:
            self.connect()
        
        print("_allow_destructive_operations (before):", self._allow_destructive_operations)

        if not self._allow_destructive_operations:
            print("_allow_destructive_operations (during check):", self._allow_destructive_operations)
            contains_destructive_ops = self._contains_destructive_operations(sql_statement)
            print("Contains destructive operations:", contains_destructive_ops)

            if contains_destructive_ops:
                print("Entered the block for destructive operations!")
                raise ValueError("Potentially destructive operations are not allowed without confirmation.")
        
        print("_allow_destructive_operations (after):", self._allow_destructive_operations)

        self._cursor.execute(sql_statement)
        self._conn.commit()
        self.logger.info("SQL Statement executed successfully.")
        return "FINISHED"
    except Exception as e:
        self.logger.error("Error executing SQL statement: {}".format(e))
        return "FAILED"
        raise
    finally:
        self.close_connection()
