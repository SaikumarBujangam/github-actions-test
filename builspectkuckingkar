import unittest
from alight.foundation.postgres.postgresdataapi import PostgresDataAPI
from alight.foundation.util.argparsebuilder import GenerateParser
from alight.foundation.util.logging.standardlogger import StandardLogger

class TestPostgresDataAPI(unittest.TestCase):
    logger = StandardLogger().getDefaultLogger()

    def setUp(self):
        try:
            self.logger.info("Setting up the test.")
            self.data_api = PostgresDataAPI(db_name="postgres", db_user_name="dbusername", db_host="adl-com-d1-cdp-dcnexus.cgs723tlzdrk.us-east-1.rds.amazonaws.com", db_password="Password123$")
            self.logger.info("Connected to the database.")
        except Exception as e:
            self.logger.error(f"Error during setup: {e}")
            raise

    def tearDown(self):
        try:
            self.logger.info("Tearing down the test.")
            self.data_api.close_connection()
            self.logger.info("Closed the database connection.")
        except Exception as e:
            self.logger.error(f"Error during teardown: {e}")
            raise

    def test_create_table(self):
        sql_statement = "CREATE TABLE test_cicd.sample_table (id SERIAL PRIMARY KEY, name VARCHAR);"
        try:
            query_id, status = self.data_api.execute_sql(sql_statement)
            self.assertEqual(status, "FINISHED")
            self.logger.info(f"Test 'test_create_table' passed. Status: {status}")
        except Exception as e:
            self.logger.error(f"Test 'test_create_table' failed. Error: {e}")
            raise

    def test_select_from_table(self):
        self.test_create_table() 

        sql_statement = "SELECT * FROM test_cicd.sample_table;"
        try:
            query_id, status = self.data_api.execute_sql(sql_statement)
            self.assertEqual(status, "FINISHED")
            self.logger.info(f"Test 'test_select_from_table' passed. Status: {status}")
        except Exception as e:
            self.logger.error(f"Test 'test_select_from_table' failed. Error: {e}")
            raise

    def test_table_not_created(self):
        sql_statement = "SELECT * FROM test_cicd.non_existent_table;"
        try:
            query_id, status = self.data_api.execute_sql(sql_statement)
            self.assertEqual(status, "FAILED")
            self.logger.info(f"Test 'test_table_not_created' passed. Status: {status}")
        except Exception as e:
            self.logger.error(f"Test 'test_table_not_created' failed. Error: {e}")
            raise

if __name__ == '__main__':
    unittest.main()

$ python test_postgresdataapi.py
[2023-12-09 19:06:56,377] [test_postgresdataapi] [consolelogger] [setUp:11] [INFO]: "Setting up the test."
[2023-12-09 19:06:56,377] [test_postgresdataapi] [consolelogger] [setUp:13] [INFO]: "Connected to the database."
[2023-12-09 19:06:57,195] [postgresdataapi] [consolelogger] [connect:26] [INFO]: "Connected to the host: adl-com-d1-cdp-dcnexus.cgs723tlzdrk.us-east-1.rds.amazonaws.com, database: postgres"
[2023-12-09 19:06:57,380] [postgresdataapi] [consolelogger] [execute_sql:45] [INFO]: "Error executing SQL statement: relation "sample_table" already exists
"
[2023-12-09 19:06:57,380] [test_postgresdataapi] [consolelogger] [test_create_table:34] [ERROR]: "Test 'test_create_table' failed. Error: relation "sample_table" already exists
"
E[2023-12-09 19:06:57,396] [test_postgresdataapi] [consolelogger] [tearDown:20] [INFO]: "Tearing down the test."
[2023-12-09 19:06:57,396] [test_postgresdataapi] [consolelogger] [tearDown:22] [INFO]: "Closed the database connection."
[2023-12-09 19:06:57,396] [test_postgresdataapi] [consolelogger] [setUp:11] [INFO]: "Setting up the test."
[2023-12-09 19:06:57,396] [test_postgresdataapi] [consolelogger] [setUp:13] [INFO]: "Connected to the database."
[2023-12-09 19:06:58,199] [postgresdataapi] [consolelogger] [connect:26] [INFO]: "Connected to the host: adl-com-d1-cdp-dcnexus.cgs723tlzdrk.us-east-1.rds.amazonaws.com, database: postgres"
[2023-12-09 19:06:58,400] [postgresdataapi] [consolelogger] [execute_sql:45] [INFO]: "Error executing SQL statement: relation "sample_table" already exists
"
[2023-12-09 19:06:58,400] [test_postgresdataapi] [consolelogger] [test_create_table:34] [ERROR]: "Test 'test_create_table' failed. Error: relation "sample_table" already exists
"
E[2023-12-09 19:06:58,400] [test_postgresdataapi] [consolelogger] [tearDown:20] [INFO]: "Tearing down the test."
[2023-12-09 19:06:58,400] [test_postgresdataapi] [consolelogger] [tearDown:22] [INFO]: "Closed the database connection."
[2023-12-09 19:06:58,400] [test_postgresdataapi] [consolelogger] [setUp:11] [INFO]: "Setting up the test."
[2023-12-09 19:06:58,400] [test_postgresdataapi] [consolelogger] [setUp:13] [INFO]: "Connected to the database."
[2023-12-09 19:06:59,086] [postgresdataapi] [consolelogger] [connect:26] [INFO]: "Connected to the host: adl-com-d1-cdp-dcnexus.cgs723tlzdrk.us-east-1.rds.amazonaws.com, database: postgres"
[2023-12-09 19:06:59,287] [postgresdataapi] [consolelogger] [execute_sql:45] [INFO]: "Error executing SQL statement: relation "test_cicd.non_existent_table" does not exist
LINE 1: SELECT * FROM test_cicd.non_existent_table;
                      ^
"
[2023-12-09 19:06:59,287] [test_postgresdataapi] [consolelogger] [test_table_not_created:56] [ERROR]: "Test 'test_table_not_created' failed. Error: relation "test_cicd.non_existent_table" does not exist
LINE 1: SELECT * FROM test_cicd.non_existent_table;
                      ^
"
E[2023-12-09 19:06:59,287] [test_postgresdataapi] [consolelogger] [tearDown:20] [INFO]: "Tearing down the test."
[2023-12-09 19:06:59,287] [test_postgresdataapi] [consolelogger] [tearDown:22] [INFO]: "Closed the database connection."

======================================================================
ERROR: test_create_table (__main__.TestPostgresDataAPI.test_create_table)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "D:\Users\A1086139\git_repo\adl-awsdeploy-cicd\tests\alight\foundation\postgres\test_postgresdataapi.py", line 30, in test_create_table
    query_id, status = self.data_api.execute_sql(sql_statement)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Users\A1086139\git_repo\adl-awsdeploy-cicd\src\alight\foundation\postgres\postgresdataapi.py", line 38, in execute_sql
    self._cursor.execute(sql_statement)
psycopg2.errors.DuplicateTable: relation "sample_table" already exists


======================================================================
ERROR: test_select_from_table (__main__.TestPostgresDataAPI.test_select_from_table)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "D:\Users\A1086139\git_repo\adl-awsdeploy-cicd\tests\alight\foundation\postgres\test_postgresdataapi.py", line 38, in test_select_from_table
    self.test_create_table()
  File "D:\Users\A1086139\git_repo\adl-awsdeploy-cicd\tests\alight\foundation\postgres\test_postgresdataapi.py", line 30, in test_create_table
    query_id, status = self.data_api.execute_sql(sql_statement)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Users\A1086139\git_repo\adl-awsdeploy-cicd\src\alight\foundation\postgres\postgresdataapi.py", line 38, in execute_sql
    self._cursor.execute(sql_statement)
psycopg2.errors.DuplicateTable: relation "sample_table" already exists


======================================================================
ERROR: test_table_not_created (__main__.TestPostgresDataAPI.test_table_not_created)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "D:\Users\A1086139\git_repo\adl-awsdeploy-cicd\tests\alight\foundation\postgres\test_postgresdataapi.py", line 52, in test_table_not_created
    query_id, status = self.data_api.execute_sql(sql_statement)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Users\A1086139\git_repo\adl-awsdeploy-cicd\src\alight\foundation\postgres\postgresdataapi.py", line 38, in execute_sql
    self._cursor.execute(sql_statement)
psycopg2.errors.UndefinedTable: relation "test_cicd.non_existent_table" does not exist
LINE 1: SELECT * FROM test_cicd.non_existent_table;
                      ^


----------------------------------------------------------------------
Ran 3 tests in 2.910s

FAILED (errors=3)
