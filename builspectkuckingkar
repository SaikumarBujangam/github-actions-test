# Create EFS Backup Policy
resource "aws_efs_backup_policy" "efs_rs_connect_policy" {
  file_system_id = aws_efs_file_system.efs_rs_connect.id
 
  backup_policy {
    status = "ENABLED"
  }
  
}

#RSC
resource "aws_efs_file_system" "efs_rs_connect" {
  creation_token = "${var.org_key}-efs-rs-connect-creation-token"
  kms_key_id = aws_kms_key.posit_kms_key.arn
  encrypted = true
  tags = local.tags

}

resource "aws_efs_access_point" "access_points_connect" {
  file_system_id = aws_efs_file_system.efs_rs_connect.id
  root_directory {
    path = "/connect-ec2"
    creation_info {
      owner_gid   = 999
      owner_uid   = 999
      permissions = 755
    }
  }
  tags = local.tags
}

resource "aws_efs_mount_target" "mount_connect_1" {
  file_system_id = aws_efs_file_system.efs_rs_connect.id
  subnet_id      = data.aws_subnets.org_private_subnets.ids[0]
  security_groups = [aws_security_group.rstudio_connect_efs_sg.id]
}

resource "aws_efs_mount_target" "mount_connect_2" {
  file_system_id = aws_efs_file_system.efs_rs_connect.id
  subnet_id      = data.aws_subnets.org_private_subnets.ids[1]
  security_groups = [aws_security_group.rstudio_connect_efs_sg.id]
}

# Create EFS Package manager Policy
resource "aws_efs_backup_policy" "efs_rs_pm_policy" {
  file_system_id = aws_efs_file_system.efs_rs_pm.id
 
  backup_policy {
    status = "ENABLED"
  }
}

# RSPM
resource "aws_efs_file_system" "efs_rs_pm" {
  creation_token = "${var.org_key}-efs-rs-pm-creation-token"
  kms_key_id = aws_kms_key.posit_kms_key.arn
  encrypted = true
  tags = local.tags
}

resource "aws_efs_access_point" "access_points_pm" {
  file_system_id = aws_efs_file_system.efs_rs_pm.id
  root_directory {
    path = "/package-ec2"
    creation_info {
      owner_gid   = 0
      owner_uid   = 0
      permissions = 755
    }
  }
  tags = local.tags
}

resource "aws_efs_mount_target" "mount_pm_1" {
  file_system_id = aws_efs_file_system.efs_rs_pm.id
  subnet_id      = data.aws_subnets.org_private_subnets.ids[0]
  security_groups = [aws_security_group.rstudio_pm_efs_sg.id]
}

resource "aws_efs_mount_target" "mount_pm_2" {
  file_system_id = aws_efs_file_system.efs_rs_pm.id
  subnet_id      = data.aws_subnets.org_private_subnets.ids[1]
  security_groups = [aws_security_group.rstudio_pm_efs_sg.id]
}
